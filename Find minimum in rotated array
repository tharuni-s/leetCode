Input: nums = [3,4,5,1,2]
Output: 1
Explanation: The original array was [1,2,3,4,5] rotated 3 times.
Example 2:

Input: nums = [4,5,6,7,0,1,2]
Output: 0
Explanation: The original array was [0,1,2,4,5,6,7] and it was rotated 4 times.
Example 3:

Input: nums = [11,13,15,17]
Output: 11
Explanation: The original array was [11,13,15,17] and it was rotated 4 times. 
=============================================================================

class Solution {
    public int findMin(int[] nums) {
        int min=nums[0];
        for(int i:nums){
            if(i<min){
                min=i;
            }
        }
        return min;
    }
}
===================================================
class Solution {
    public int findMin(int[] nums) {
        int l = 0;
        int r = nums.length - 1;
        int min = Integer.MAX_VALUE;
        while (l <= r) {
           int mid = (l + r) / 2;
            if (nums[mid] >= nums[l]) {
                min = Math.min(min, nums[l]);
                l = mid + 1;
            }else {
                min = Math.min(min, nums[mid]);
                r = mid - 1;
            }
        }
      
        return min;
    }
}
